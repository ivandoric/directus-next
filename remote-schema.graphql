# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type Mutation {
    create_session_item(data: create_session_input!): session
    create_session_items(data: [create_session_input!], filter: session_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [session]
    delete_session_item(id: ID!): delete_one
    delete_session_items(ids: [ID]!): delete_many
    update_session_item(data: update_session_input!, id: ID!): session
    update_session_items(data: update_session_input!, filter: session_filter, ids: [ID]!, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [session]
}

type Query {
    categories(filter: categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [categories]
    categories_aggregated(filter: categories_filter, groupBy: [String], limit: Int, search: String, sort: [String]): [categories_aggregated]
    categories_by_id(id: ID!): categories
    posts(filter: posts_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [posts]
    posts_aggregated(filter: posts_filter, groupBy: [String], limit: Int, search: String, sort: [String]): [posts_aggregated]
    posts_by_id(id: ID!): posts
    product_colors(filter: product_colors_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [product_colors]
    product_colors_aggregated(filter: product_colors_filter, groupBy: [String], limit: Int, search: String, sort: [String]): [product_colors_aggregated]
    product_colors_by_id(id: ID!): product_colors
    product_sizes(filter: product_sizes_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [product_sizes]
    product_sizes_aggregated(filter: product_sizes_filter, groupBy: [String], limit: Int, search: String, sort: [String]): [product_sizes_aggregated]
    product_sizes_by_id(id: ID!): product_sizes
    products(filter: products_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [products]
    products_aggregated(filter: products_filter, groupBy: [String], limit: Int, search: String, sort: [String]): [products_aggregated]
    products_by_id(id: ID!): products
    products_categories(filter: products_categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [products_categories]
    products_categories_aggregated(filter: products_categories_filter, groupBy: [String], limit: Int, search: String, sort: [String]): [products_categories_aggregated]
    products_categories_by_id(id: ID!): products_categories
    products_product_colors(filter: products_product_colors_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [products_product_colors]
    products_product_colors_aggregated(filter: products_product_colors_filter, groupBy: [String], limit: Int, search: String, sort: [String]): [products_product_colors_aggregated]
    products_product_colors_by_id(id: ID!): products_product_colors
    products_product_sizes(filter: products_product_sizes_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [products_product_sizes]
    products_product_sizes_aggregated(filter: products_product_sizes_filter, groupBy: [String], limit: Int, search: String, sort: [String]): [products_product_sizes_aggregated]
    products_product_sizes_by_id(id: ID!): products_product_sizes
    session(filter: session_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [session]
    session_aggregated(filter: session_filter, groupBy: [String], limit: Int, search: String, sort: [String]): [session_aggregated]
    session_by_id(id: ID!): session
}

type categories {
    category_name: String
    date_created: Date
    date_created_func: datetime_functions
    date_updated: Date
    date_updated_func: datetime_functions
    id: ID
    products(filter: products_categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [products_categories]
    slug: String
    sort: Int
    status: String!
    user_created: String
    user_updated: String
}

type categories_aggregated {
    avg: categories_aggregated_fields
    avgDistinct: categories_aggregated_fields
    count: categories_aggregated_fields
    countDistinct: categories_aggregated_fields
    group: JSON
    max: categories_aggregated_fields
    min: categories_aggregated_fields
    sum: categories_aggregated_fields
    sumDistinct: categories_aggregated_fields
}

type categories_aggregated_fields {
    id: Float
    sort: Float
}

type datetime_functions {
    day: Int
    hour: Int
    minute: Int
    month: Int
    second: Int
    week: Int
    weekday: Int
    year: Int
}

type delete_many {
    ids: [ID]!
}

type delete_one {
    id: ID!
}

type directus_files {
    charset: String
    description: String
    duration: Int
    embed: String
    filename_disk: String
    filename_download: String!
    filesize: Int
    folder: String
    height: Int
    id: ID
    location: String
    metadata: JSON
    modified_by: String
    modified_on: Date!
    modified_on_func: datetime_functions
    storage: String!
    tags: JSON
    title: String
    type: String
    uploaded_by: String
    uploaded_on: Date!
    uploaded_on_func: datetime_functions
    width: Int
}

type posts {
    body: String
    date_created: Date
    date_created_func: datetime_functions
    date_updated: Date
    date_updated_func: datetime_functions
    featured_image(filter: directus_files_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): directus_files
    id: ID
    slug: String
    sort: Int
    status: String!
    title: String
    user_created: String
    user_updated: String
}

type posts_aggregated {
    avg: posts_aggregated_fields
    avgDistinct: posts_aggregated_fields
    count: posts_aggregated_fields
    countDistinct: posts_aggregated_fields
    group: JSON
    max: posts_aggregated_fields
    min: posts_aggregated_fields
    sum: posts_aggregated_fields
    sumDistinct: posts_aggregated_fields
}

type posts_aggregated_fields {
    id: Float
    sort: Float
}

type product_colors {
    color_name: String
    color_value: String
    date_created: Date
    date_created_func: datetime_functions
    date_updated: Date
    date_updated_func: datetime_functions
    id: ID
    sort: Int
    status: String!
    user_created: String
    user_updated: String
}

type product_colors_aggregated {
    avg: product_colors_aggregated_fields
    avgDistinct: product_colors_aggregated_fields
    count: product_colors_aggregated_fields
    countDistinct: product_colors_aggregated_fields
    group: JSON
    max: product_colors_aggregated_fields
    min: product_colors_aggregated_fields
    sum: product_colors_aggregated_fields
    sumDistinct: product_colors_aggregated_fields
}

type product_colors_aggregated_fields {
    id: Float
    sort: Float
}

type product_sizes {
    date_created: Date
    date_created_func: datetime_functions
    date_updated: Date
    date_updated_func: datetime_functions
    id: ID
    long_title: String
    short_title: String
    sort: Int
    status: String!
    user_created: String
    user_updated: String
}

type product_sizes_aggregated {
    avg: product_sizes_aggregated_fields
    avgDistinct: product_sizes_aggregated_fields
    count: product_sizes_aggregated_fields
    countDistinct: product_sizes_aggregated_fields
    group: JSON
    max: product_sizes_aggregated_fields
    min: product_sizes_aggregated_fields
    sum: product_sizes_aggregated_fields
    sumDistinct: product_sizes_aggregated_fields
}

type product_sizes_aggregated_fields {
    id: Float
    sort: Float
}

type products {
    available_colors(filter: products_product_colors_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [products_product_colors]
    available_sizes(filter: products_product_sizes_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [products_product_sizes]
    category(filter: products_categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [products_categories]
    date_created: Date
    date_created_func: datetime_functions
    date_updated: Date
    date_updated_func: datetime_functions
    id: ID
    price: String
    product_description: String
    product_image(filter: directus_files_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): directus_files
    product_name: String
    show_colors: Boolean
    show_sizes: Boolean
    slug: String
    sort: Int
    status: String!
    user_created: String
    user_updated: String
}

type products_aggregated {
    avg: products_aggregated_fields
    avgDistinct: products_aggregated_fields
    count: products_aggregated_fields
    countDistinct: products_aggregated_fields
    group: JSON
    max: products_aggregated_fields
    min: products_aggregated_fields
    sum: products_aggregated_fields
    sumDistinct: products_aggregated_fields
}

type products_aggregated_fields {
    id: Float
    sort: Float
}

type products_categories {
    categories_id(filter: categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): categories
    id: ID
    products_id(filter: products_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): products
}

type products_categories_aggregated {
    avg: products_categories_aggregated_fields
    avgDistinct: products_categories_aggregated_fields
    count: products_categories_aggregated_fields
    countDistinct: products_categories_aggregated_fields
    group: JSON
    max: products_categories_aggregated_fields
    min: products_categories_aggregated_fields
    sum: products_categories_aggregated_fields
    sumDistinct: products_categories_aggregated_fields
}

type products_categories_aggregated_fields {
    categories_id: Float
    id: Float
    products_id: Float
}

type products_product_colors {
    id: ID
    product_colors_id(filter: product_colors_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): product_colors
    products_id(filter: products_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): products
}

type products_product_colors_aggregated {
    avg: products_product_colors_aggregated_fields
    avgDistinct: products_product_colors_aggregated_fields
    count: products_product_colors_aggregated_fields
    countDistinct: products_product_colors_aggregated_fields
    group: JSON
    max: products_product_colors_aggregated_fields
    min: products_product_colors_aggregated_fields
    sum: products_product_colors_aggregated_fields
    sumDistinct: products_product_colors_aggregated_fields
}

type products_product_colors_aggregated_fields {
    id: Float
    product_colors_id: Float
    products_id: Float
}

type products_product_sizes {
    id: ID
    product_sizes_id(filter: product_sizes_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): product_sizes
    products_id(filter: products_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): products
}

type products_product_sizes_aggregated {
    avg: products_product_sizes_aggregated_fields
    avgDistinct: products_product_sizes_aggregated_fields
    count: products_product_sizes_aggregated_fields
    countDistinct: products_product_sizes_aggregated_fields
    group: JSON
    max: products_product_sizes_aggregated_fields
    min: products_product_sizes_aggregated_fields
    sum: products_product_sizes_aggregated_fields
    sumDistinct: products_product_sizes_aggregated_fields
}

type products_product_sizes_aggregated_fields {
    id: Float
    product_sizes_id: Float
    products_id: Float
}

type session {
    date_created: Date
    date_created_func: datetime_functions
    date_updated: Date
    date_updated_func: datetime_functions
    id: ID
    sort: Int
    status: String!
    temp_order: JSON
    user_created: String
    user_updated: String
}

type session_aggregated {
    avg: session_aggregated_fields
    avgDistinct: session_aggregated_fields
    count: session_aggregated_fields
    countDistinct: session_aggregated_fields
    group: JSON
    max: session_aggregated_fields
    min: session_aggregated_fields
    sum: session_aggregated_fields
    sumDistinct: session_aggregated_fields
}

type session_aggregated_fields {
    sort: Float
}

"ISO8601 Date values"
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

input boolean_filter_operators {
    _eq: Boolean
    _neq: Boolean
    _nnull: Boolean
    _null: Boolean
}

input categories_filter {
    _and: [categories_filter]
    _or: [categories_filter]
    category_name: string_filter_operators
    date_created: date_filter_operators
    date_created_func: datetime_function_filter_operators
    date_updated: date_filter_operators
    date_updated_func: datetime_function_filter_operators
    id: number_filter_operators
    products: products_categories_filter
    slug: string_filter_operators
    sort: number_filter_operators
    status: string_filter_operators
    user_created: string_filter_operators
    user_updated: string_filter_operators
}

input create_session_input {
    date_created: Date
    date_created_func: datetime_functionsInput
    date_updated: Date
    date_updated_func: datetime_functionsInput
    id: ID
    sort: Int
    status: String!
    temp_order: JSON
    user_created: String
    user_updated: String
}

input date_filter_operators {
    _eq: String
    _gt: String
    _gte: String
    _lt: String
    _lte: String
    _neq: String
    _nnull: Boolean
    _null: Boolean
}

input datetime_function_filter_operators {
    day: number_filter_operators
    hour: number_filter_operators
    minute: number_filter_operators
    month: number_filter_operators
    second: number_filter_operators
    week: number_filter_operators
    weekday: number_filter_operators
    year: number_filter_operators
}

input datetime_functionsInput {
    day: Int
    hour: Int
    minute: Int
    month: Int
    second: Int
    week: Int
    weekday: Int
    year: Int
}

input directus_files_filter {
    _and: [directus_files_filter]
    _or: [directus_files_filter]
    charset: string_filter_operators
    description: string_filter_operators
    duration: number_filter_operators
    embed: string_filter_operators
    filename_disk: string_filter_operators
    filename_download: string_filter_operators
    filesize: number_filter_operators
    folder: string_filter_operators
    height: number_filter_operators
    id: string_filter_operators
    location: string_filter_operators
    metadata: string_filter_operators
    modified_by: string_filter_operators
    modified_on: date_filter_operators
    modified_on_func: datetime_function_filter_operators
    storage: string_filter_operators
    tags: string_filter_operators
    title: string_filter_operators
    type: string_filter_operators
    uploaded_by: string_filter_operators
    uploaded_on: date_filter_operators
    uploaded_on_func: datetime_function_filter_operators
    width: number_filter_operators
}

input number_filter_operators {
    _eq: Float
    _gt: Float
    _gte: Float
    _in: [Float]
    _lt: Float
    _lte: Float
    _neq: Float
    _nin: [Float]
    _nnull: Boolean
    _null: Boolean
}

input posts_filter {
    _and: [posts_filter]
    _or: [posts_filter]
    body: string_filter_operators
    date_created: date_filter_operators
    date_created_func: datetime_function_filter_operators
    date_updated: date_filter_operators
    date_updated_func: datetime_function_filter_operators
    featured_image: directus_files_filter
    id: number_filter_operators
    slug: string_filter_operators
    sort: number_filter_operators
    status: string_filter_operators
    title: string_filter_operators
    user_created: string_filter_operators
    user_updated: string_filter_operators
}

input product_colors_filter {
    _and: [product_colors_filter]
    _or: [product_colors_filter]
    color_name: string_filter_operators
    color_value: string_filter_operators
    date_created: date_filter_operators
    date_created_func: datetime_function_filter_operators
    date_updated: date_filter_operators
    date_updated_func: datetime_function_filter_operators
    id: number_filter_operators
    sort: number_filter_operators
    status: string_filter_operators
    user_created: string_filter_operators
    user_updated: string_filter_operators
}

input product_sizes_filter {
    _and: [product_sizes_filter]
    _or: [product_sizes_filter]
    date_created: date_filter_operators
    date_created_func: datetime_function_filter_operators
    date_updated: date_filter_operators
    date_updated_func: datetime_function_filter_operators
    id: number_filter_operators
    long_title: string_filter_operators
    short_title: string_filter_operators
    sort: number_filter_operators
    status: string_filter_operators
    user_created: string_filter_operators
    user_updated: string_filter_operators
}

input products_categories_filter {
    _and: [products_categories_filter]
    _or: [products_categories_filter]
    categories_id: categories_filter
    id: number_filter_operators
    products_id: products_filter
}

input products_filter {
    _and: [products_filter]
    _or: [products_filter]
    available_colors: products_product_colors_filter
    available_sizes: products_product_sizes_filter
    category: products_categories_filter
    date_created: date_filter_operators
    date_created_func: datetime_function_filter_operators
    date_updated: date_filter_operators
    date_updated_func: datetime_function_filter_operators
    id: number_filter_operators
    price: string_filter_operators
    product_description: string_filter_operators
    product_image: directus_files_filter
    product_name: string_filter_operators
    show_colors: boolean_filter_operators
    show_sizes: boolean_filter_operators
    slug: string_filter_operators
    sort: number_filter_operators
    status: string_filter_operators
    user_created: string_filter_operators
    user_updated: string_filter_operators
}

input products_product_colors_filter {
    _and: [products_product_colors_filter]
    _or: [products_product_colors_filter]
    id: number_filter_operators
    product_colors_id: product_colors_filter
    products_id: products_filter
}

input products_product_sizes_filter {
    _and: [products_product_sizes_filter]
    _or: [products_product_sizes_filter]
    id: number_filter_operators
    product_sizes_id: product_sizes_filter
    products_id: products_filter
}

input session_filter {
    _and: [session_filter]
    _or: [session_filter]
    date_created: date_filter_operators
    date_created_func: datetime_function_filter_operators
    date_updated: date_filter_operators
    date_updated_func: datetime_function_filter_operators
    id: string_filter_operators
    sort: number_filter_operators
    status: string_filter_operators
    temp_order: string_filter_operators
    user_created: string_filter_operators
    user_updated: string_filter_operators
}

input string_filter_operators {
    _contains: String
    _empty: Boolean
    _ends_with: String
    _eq: String
    _in: [String]
    _ncontains: String
    _nempty: Boolean
    _nends_with: String
    _neq: String
    _nin: [String]
    _nnull: Boolean
    _nstarts_with: String
    _null: Boolean
    _starts_with: String
}

input update_session_input {
    date_created: Date
    date_created_func: datetime_functionsInput
    date_updated: Date
    date_updated_func: datetime_functionsInput
    id: ID
    sort: Int
    status: String
    temp_order: JSON
    user_created: String
    user_updated: String
}
